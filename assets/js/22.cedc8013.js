(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{379:function(e,t,s){"use strict";s.r(t);var a=s(45),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"built-in-game-objects"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#built-in-game-objects"}},[e._v("#")]),e._v(" Built-in Game Objects")]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("twilioquest-base")]),e._v(" extension ships with some default scripted objects. We use these in official TwilioQuest content or provide them as helpful building blocks.")]),e._v(" "),s("p",[e._v("These objects are members of the "),s("code",[e._v("TwilioQuestObjects")]),e._v(" tileset. These objects come with a bundle of pre-configured properties and custom scripting. Several of the objects below have many types. These are the same object's with functionality, but with different sprites or orientations.")]),e._v(" "),s("h2",{attrs:{id:"twilioquestobjects"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#twilioquestobjects"}},[e._v("#")]),e._v(" TwilioQuestObjects")]),e._v(" "),s("h3",{attrs:{id:"chests"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chests"}},[e._v("#")]),e._v(" Chests")]),e._v(" "),s("p",[e._v("Chests in TwilioQuest are used to present objectives to your players that are optional. They do not block a player's progress. These are best suited for enrichment lessons that are not central to the mission's content.")]),e._v(" "),s("h4",{attrs:{id:"properties"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),s("ul",[s("li",[s("p",[s("code",[e._v("objectiveName (String)")]),e._v(" - This is the objective name that this chest should display in a Hack Interface when a player interacts with the chest.")])]),e._v(" "),s("li",[s("p",[e._v("types: "),s("code",[e._v("chest-red")]),e._v(", "),s("code",[e._v("chest-autumn")]),e._v(", "),s("code",[e._v("chest-blue")]),e._v(", "),s("code",[e._v("chest-green")]),e._v(", "),s("code",[e._v("chest-light-blue")]),e._v(", "),s("code",[e._v("chest-light-red")]),e._v(", "),s("code",[e._v("chest-pink")]),e._v(", "),s("code",[e._v("chest-purple")]),e._v(", "),s("code",[e._v("chest-red-orange")])])])]),e._v(" "),s("h3",{attrs:{id:"laser-barriers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#laser-barriers"}},[e._v("#")]),e._v(" Laser Barriers")]),e._v(" "),s("p",[e._v("Laser Barriers in TwilioQuest are conventionally used to present objectives to your players that are required. They prevent a player from progressing into the space they block off. Once their linked objective is completed they will open. These are best suited to be paired with a terminal that will launch essential educational content.")]),e._v(" "),s("h4",{attrs:{id:"properties-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#properties-2"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),s("ul",[s("li",[s("p",[s("code",[e._v("objectiveName (String)")]),e._v(" - This is the objective name that should cause this laser barrier to open after it's completed.")])]),e._v(" "),s("li",[s("p",[e._v("types: "),s("code",[e._v("laser-horizontal")]),e._v(", "),s("code",[e._v("laser-vertical")])])])]),e._v(" "),s("h3",{attrs:{id:"terminals"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#terminals"}},[e._v("#")]),e._v(" Terminals")]),e._v(" "),s("p",[e._v("Terminals are the conventional location for launching an objective that will open up a laser barrier.")]),e._v(" "),s("ul",[s("li",[s("p",[s("code",[e._v("objectiveName (String)")]),e._v(" - This is the objective name that this terminal should display in a Hack Interface when a player interacts with the terminal.")])]),e._v(" "),s("li",[s("p",[e._v("types: "),s("code",[e._v("terminal")])])])]),e._v(" "),s("h2",{attrs:{id:"legacy-objects"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#legacy-objects"}},[e._v("#")]),e._v(" Legacy Objects")]),e._v(" "),s("p",[e._v("These objects are created in Tiled differently than the new object format above. As time progresses, they'll be migrated to that new format.")]),e._v(" "),s("h3",{attrs:{id:"transition-areas"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transition-areas"}},[e._v("#")]),e._v(" Transition Areas")]),e._v(" "),s("ul",[s("li",[e._v("key")])]),e._v(" "),s("p",[e._v("These trigger events when they're entered and exited by a player")]),e._v(" "),s("h3",{attrs:{id:"exits"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exits"}},[e._v("#")]),e._v(" Exits")]),e._v(" "),s("ul",[s("li",[e._v("level name")]),e._v(" "),s("li",[e._v("map name")])]),e._v(" "),s("p",[e._v("These could be replaced by transition areas?")]),e._v(" "),s("h3",{attrs:{id:"player-entry-points"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#player-entry-points"}},[e._v("#")]),e._v(" Player Entry Points")]),e._v(" "),s("ul",[s("li",[e._v("key")])]),e._v(" "),s("h3",{attrs:{id:"non-player-characters-npcs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#non-player-characters-npcs"}},[e._v("#")]),e._v(" Non Player Characters (NPCs)")]),e._v(" "),s("ul",[s("li",[e._v("conversation")])]),e._v(" "),s("h3",{attrs:{id:"tile-objects"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tile-objects"}},[e._v("#")]),e._v(" Tile Objects")]),e._v(" "),s("p",[e._v("This infomration might belong in a guide?")]),e._v(" "),s("h3",{attrs:{id:"generic-objects"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generic-objects"}},[e._v("#")]),e._v(" Generic Objects")]),e._v(" "),s("p",[e._v("This information might belong in a guide?")]),e._v(" "),s("p",[e._v("These are sometimes useful to do things like create an arbitrary region that triggers a piece of interaction text.")])])}),[],!1,null,null,null);t.default=r.exports}}]);